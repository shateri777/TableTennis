@page
@model TableTennis.Pages.Game.ReadAll.IndexModel
@{
    ViewData["Title"] = "Matchhistorik";
}

<section class="match-setup">
    <div class="match-container-history">
        <h1 class="text-center mb-4">@ViewData["Title"]</h1>
        <form method="get" class="mb-4">
            <div class="input-group playerSelect-buttons">
                <input type="text" asp-for="SearchTerm" class="form-control" placeholder="Sök på spelarnamn..." />
                <div class="input-group-append">
                    <button type="submit" class="playerSelect-button one">Sök</button>
                </div>
            </div>
        </form>

        @if (Model.InactiveMatchHistories != null && Model.InactiveMatchHistories.Any())
        {
            <div class="card mb-4">
                <div class="card-header">
                    Återställ Inaktiv Match
                </div>
                <div class="card-body">
                    <form method="post" asp-page-handler="Restore">
                        <div class="form-group mb-3">
                            <label for="inactiveMatchId">Välj en match att återställa:</label>
                            <select asp-for="SelectedInactiveMatchId" class="form-control"
                                    asp-items="@(new SelectList(Model.InactiveMatchHistories, "Id", "DisplayText"))">
                                <option value="">-- Välj en match --</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-success">
                            <i class="fas fa-undo-alt"></i> Återställ Vald Match
                        </button>
                    </form>
                </div>
            </div>
        }

        @if (Model.MatchHistories == null || !Model.MatchHistories.Any())
        {
            @if (!string.IsNullOrEmpty(Model.SearchTerm))
            {
                <p class="text-center">Inga matcher hittades för söktermen "@Model.SearchTerm".</p>
            }
            else
            {
                <p class="text-center">Det finns ingen matchhistorik att visa ännu.</p>
            }
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered">
                    <thead class="thead-dark">
                        <tr>
                            <th>Datum</th>
                            <th>Spelare 1</th>
                            <th>Ålder</th>
                            <th>Spelare 2</th>
                            <th>Ålder</th>
                            <th>Resultat (Set)</th>
                            <th>Bäst av</th>
                            <th>Kön (Match)</th>
                            <th>Åtgärd</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var match in Model.MatchHistories)
                        {
                            <tr>
                                <td>@match.MatchDate.ToString("yyyy-MM-dd HH:mm")</td>
                                <td>
                                    @match.Player1FullName
                                    @if (match.IsPlayer1Winner)
                                    {
                                        <text>🏆</text>
                                    }
                                </td>
                                <td>@match.Player1Age</td>
                                <td>
                                    @match.Player2FullName
                                    @if (match.IsPlayer2Winner)
                                    {
                                        <text>🏆</text>
                                    }
                                </td>
                                <td>@match.Player2Age</td>
                                <td class="text-center">
                                    @match.Player1Score - @match.Player2Score
                                        <span tabindex="0"
                                              class="ms-2" @* Margin start 2 för lite avstånd *@
                                              role="button"
                                              data-bs-toggle="popover"
                                              data-bs-trigger="focus" @* Visas vid klick/fokus, döljs vid nästa klick *@
                                              data-bs-html="true"
                                              title="Set-detaljer"
                                              data-bs-content="@(string.Join("<br>", match.SetScoresDetails))">
                                            <i class="fa-solid fa-circle-info"></i> @* Font Awesome ikon, eller texten "(i)" *@
                                        </span>
                                </td>
                                <td class="text-center">@match.BestOfSets</td>
                                <td>@match.SetGender</td>
                                <td>
                                    <form method="post" asp-page-handler="SoftDelete" style="display:inline;">
                                        <input type="hidden" name="matchId" value="@match.Id" />
                                        <button type="submit" class="btn btn-sm btn-danger" title="Markera som inaktiv">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</section>

@section Scripts {
    <script>
        // Initiera alla Bootstrap Popovers på sidan
        var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'))
        var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {
          return new bootstrap.Popover(popoverTriggerEl)
        })
    </script>
}
